name: "[Test] Mobile App"

on:
  # push:
  #   branches:
  #     - main
  #     - develop
  #     - release
  #     - hotfix
  schedule:
    - cron: "0 0/12 * * *"
  workflow_dispatch:
    inputs:
      ref:
        description: "The branch to run tests on (develop by default)"
        required: false
        default: develop

# Ignore while only running every 12 hours on the develop
# concurrency: 
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: ${{ github.ref_name != 'develop' }}

jobs:  
  detox-tests-ios:
    name: "Ledger Live Mobile - iOS Detox Tests"
    runs-on: macos-latest
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref || 'develop' }} # For when tests are run on every push to PR: ${{ github.event.pull_request.head.sha || github.event.push.head.sha }}
      - uses: pnpm/action-setup@v2.1.0
        with:
          version: latest
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm
          cache-dependency-path: "**/pnpm-lock.yaml"
      - name: Install applesimutils
        run: |
          brew tap wix/brew
          brew install applesimutils
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
      - name: install dependencies
        run: pnpm i --filter="live-mobile..." --filter="ledger-live" --no-frozen-lockfile --unsafe-perm
      - name: Build dependencies
        run: pnpm build:llm:deps
      - name: Clear and build detox cache # investigate how to properly cache this
        run: pnpm mobile detox clean-framework-cache && pnpm mobile detox build-framework-cache
      - name: Build iOS app for Detox test run
        run: pnpm mobile e2e:build -c ios.sim.release
      - name: Test iOS app
        run: pnpm mobile e2e:test -c ios.sim.release --loglevel verbose --record-logs all --record-timeline all --take-screenshots all --record-videos failing --record-performance all --detectOpenHandles
      - name: Upload test artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-ios-artifacts
          path: apps/ledger-live-mobile/artifacts/
      - name: Upload Allure report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: "allure-results-ios"
          path: apps/ledger-live-mobile/allure-results

  detox-tests-android:
    name: "Ledger Live Mobile - Android Detox Tests"
    runs-on: macos-latest
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.1.0
        with:
          version: latest
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm
          cache-dependency-path: "**/pnpm-lock.yaml"
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
        env:
          ImageOS: ubuntu20
      - name: setup JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          cache: 'gradle'
      - name: setup Android SDK
        uses: android-actions/setup-android@v2.0.8
      - name: Install dependencies
        run: pnpm i --filter="live-mobile..." --filter="ledger-live" --no-frozen-lockfile --unsafe-perm
      - name: Build dependencies
        run: pnpm build:llm:deps     
      # May be taken care of by the `setup-java` action caching
      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
      - name: Clear and build detox cache # investigate how to properly cache this
        run: pnpm mobile detox clean-framework-cache && pnpm mobile detox build-framework-cache
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-30
      # Removing this step for now as it doesn't seem to ever get triggers and it's wasting 5 mins. Requires investigation
      # - name: create AVD and generate snapshot for caching
      #   if: steps.avd-cache.outputs.cache-hit != 'true'
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: 30
      #     arch: x86_64
      #     target: default
      #     force-avd-creation: false
      #     emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
      #     disable-animations: false
      #     ram-size: 4096M
      #     script: echo "Generated AVD snapshot for caching."
      - name: Build Android app for Detox test run
        run: pnpm mobile e2e:build -c android.emu.release       
      - name: Run Android tests
        uses: reactivecircus/android-emulator-runner@v2
        timeout-minutes: 20
        with:
          api-level: 30
          arch: x86_64
          target: default
          avd-name: Nexus_6
          emulator-options: -verbose -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          ram-size: 4096M
          script: pnpm mobile e2e:test -c android.emu.release --loglevel trace --record-logs all --record-timeline all --take-screenshots all --record-videos failing --forceExit --detectOpenHandles
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-android-artifacts
          path: apps/ledger-live-mobile/artifacts/
      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: "allure-results-android"
          path: apps/ledger-live-mobile/allure-results
  
  allure-report:
    name: "Allure Reports Export on Server"
    runs-on: [ledger-live, linux]
    if: always()
    needs: [detox-tests-ios, detox-tests-android]
    steps:
      - id: branch-name
        uses: tj-actions/branch-names@v6
      - uses: actions/download-artifact@v2
        with:
          name: allure-results-android
          path: allure-results-android
      - uses: actions/download-artifact@v2
        with:
          name: allure-results-ios
          path: allure-results-ios
      - uses: LedgerHQ/send-to-allure-server-action@2.0.0
        with:
          allure-server-url: "https://ledger-live.ars.green.ledgerlabs.net"
          build-name: ${{ github.workflow }}-ios
          build-url: https://github.com/LedgerHQ/ledger-live/actions/runs/${{ github.run_id }}
          username: ${{ secrets.ALLURE_LOGIN }}
          password: ${{ secrets.ALLURE_PASSWORD }}
          path: "detox/iOS/${{ steps.branch-name.outputs.current_branch }}"
          allure-results: allure-results-ios
      - uses: LedgerHQ/send-to-allure-server-action@2.0.0
        with:
          allure-server-url: "https://ledger-live.ars.green.ledgerlabs.net"
          build-name: ${{ github.workflow }}-android
          build-url: https://github.com/LedgerHQ/ledger-live/actions/runs/${{ github.run_id }}
          username: ${{ secrets.ALLURE_LOGIN }}
          password: ${{ secrets.ALLURE_PASSWORD }}
          path: "detox/android/${{ steps.branch-name.outputs.current_branch }}"
          allure-results: allure-results-android